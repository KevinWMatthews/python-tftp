Add server retries to test list.

For block number failure in client read:

# print 'Received wrong block number! Expecting 1 but got %s' % block_number
The block number is an unprintable character. How can I display the hex code?

Can we import the opcodes from the class?

Do we need to sanitize the data portion of the packet in client.read()? For example, do we send an ack if we receive a packet that is < 512K? I'm pretty sure.

__parse_response_packet() probably needs a try statement.
Should we move input sanitation into __parse_response_packet()? We can't because we won't always expect the same opcode or block number.
*** If input sanitation fails, do we send a response to the server?

Deal with the server missing our ack and sending the same packet again.
    Wonder how to test this in the real world. Maybe have a dummy socket that we can swap in somehow?

Handle error messages from server:
    File not found

Add test case for when the data field is exactly 512 bytes. In this case the server will send a second, empty packet.

Add rollover test cases: 511 bytes, 512 bytes, 513 bytes?


Misc:

# There is something funky with the list of arguments. I have to create it all at once with the tuples?

Do we want to try to verify the console output of client read failures? Probably not.
Do we want to return an error message? Not sure yet. It is simpler to return false for now.

Should we combine server ip and port/tid into a single tuple, the socket address?

Revise random string generator to include all bytes of data, not just printable characters.

Tests: should create_packet() throw an exception if you pass it something that is not a string?

Should probably extract details on TFTP packets. They have their own standard, and now I made their own tests!

Think about packing the data struct. Will the data be in string form?

What really happens to element 4 in an empty data packet?



Scripts:
Modify random_string to produce a variable-length string.
Modify tftp_get to allow the user to enter a filename.
Specify/determine the download location.
Move testing scripts to a different folder. Also don't distribute.
