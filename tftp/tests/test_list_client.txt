TFTP protocol for reading N blocks:
    Client              Server
    __________________________
    Read        -->

                <--     Data block 1 (== 512 K)
    Ack block 1 -->

                <--     Data block 2 (== 512 K)
    Ack block 2 -->

                ...

                <--     Data block n (== 512 K)
    Ack block n -->

                <--     Data N (< 512 K)
    Ack block N -->



            ~~~ Test list ~~~
Client read request failure
    Client                  Server
    ______________________________
    Failure: ?          -->


Server timeout failure, block 1
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Timeout
    Abort


Server response failure, block 1
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data packet
    Abort
                            wrong block number
                            wrong opcode
                            block too large
                            block is 0 bytes


Success, block 1
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (1-511 bytes of data)
    Write: Ack block 1  --> Received

    Read:               <-- Timeout
    Success


Success after ack failure, block 1
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (1-511 bytes of data)
    Write: Ack block 1  --> Not received

    Read:               <-- Data block 1 (1-511 bytes of data)
    Write: Ack block 1  --> Does not matter
    Success


Success? with two ack failures, block 1
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (1-511 bytes of data)
    Write: Ack block 1  --> Not received

    Read:               <-- Data block 1 (1-511 bytes of data)
    Write: Ack block 1  --> Does not matter
    Success




            ~~~ Second block ~~~


Server timeout failure, block 2
    Client                  Server
    ______________________________
    Write: Read Request --> Received

    Read:               <-- Data block 1 (== 512 bytes of data)
    Write: Ack block 1  -->

    Read:               <-- Failure: socket timeout
    Write: Ack block 1  -->

    Read:               <-- Failure: socket timeout
    Abort


Server response failure, block 2
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (== 512 bytes of data)
    Write: Ack block 1  --> Received

    Read:               <-- Data packet, invalid
    Abort
                            wrong block number
                            wrong opcode
                            block too large


Success, empty payload ends transmission, block 2
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (512 bytes of data)
    Write: Ack block 1  --> Received

    Read:               <-- Data block 2 (1-511 byte of data)
    Ack block 2         --> Received

    Read:               <-- Timeout
    Success


Success? with two ack failures, block 2
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (== 512 bytes of data)
    Write: Ack block 1  --> Received

    Read:               <-- Data block 2 (0-511 bytes of data)
    Write: Ack block 2  --> Not received

    Read:               <-- Data block 2 (0-511 bytes of data)
    Write: Ack block 2  --> Does not matter
    Success



Success, server resends first block, block 2
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (512 bytes of data)
    Write: Ack block 1  --> Not received

    Read:               <-- Data block 1 (512 byte of data)
    Write: Ack block 1  --> Received

    Read:               <-- Data block 2 (0-511 byte of data)
    Write: Ack block 2  --> Received

    Read:               <-- Timeout
    Success


Success, server resends first and second blocks, block 2
    Client                  Server
    ______________________________
    Write: Read request --> Received

    Read:               <-- Data block 1 (512 bytes of data)
    Write: Ack block 1  --> Not received

    Read:               <-- Resend data block 1 (512 byte of data)
    Write: Ack block 1  --> Received

    Read:               <-- Data block 2 (0-511 byte of data)
    Write: Ack block 2  --> Not received

    Read:               <-- Data block 2 (0-511 byte of data)
    Write: Ack block 2  --> Does not matter
    Success



            ~~~ N blocks ~~~
    Server response failure, block N.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        --> Ack block n
        <-- Failure
                no response (timeout)
                wrong block number
                wrong opcode

    Ack failure, block N.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        --> Ack block n
        <-- Data block N
        --> Failure
                ?

    Valid transmission, N blocks.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        --> Ack block n
        <-- Data block N
        --> Ack block N

    Valid transmission with ack failure, N blocks.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        --> Failure: ack block n
                packet not received
        <-- Data block n
        --> Ack block n
        <-- Data block N
        --> Ack block N

    Ack failure on final block, N blocks.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        <-- Data block n
        --> Ack block n
        <-- Data block N
        --> Failure: ack block N
                packet not received
        <-- Data block N
        --> Failure: ack block N
                packet not received

    Valid transmission with ack failure on final block, N blocks.
        --> Read
        <-- Data block 1
        --> Ack block 1
        <-- Data block n
        <-- Data block n
        --> Ack block n
        <-- Data block N
        --> Failure: ack block N
                packet not received
        <-- Data block N
        --> Ack block N


TODO:
    Different filenames.
        input sanitization
    Different server IP.
        input sanitization
    Different server port.
        69 by default?
        Other ports?
    Different Transmission ID:
        1
        65535
        65536   fail
        Are there any theoreticall invalid ports?
    Different data packets:
        minimum
        512 K
        513 K
    Different number of blocks:
        1
        2
        65535   (original TFTP size limit was 512K * 65535 = 32 M)
        65536?  this works with some tftp server implementations; the block number just rolls over.
    Different modes:
        octed
        mail
        netascii

    Success on block 1.
    Success on block 2.
    Success on block n.
